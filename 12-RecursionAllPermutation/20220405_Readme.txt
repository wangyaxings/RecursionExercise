总结：
（1）递归并不总是最先想到；
（2）递归的耗时并不少；
（3）代码中一些变量的声明并不必须，方便调试之用；
（4）这个全排列的思路是
a b c d全排列
a (b c d  全排列)
a 放入（eg.[a]b[a]c[a]d[a] 全排列）
b c d 全排列
b (c d 全排列)
b 放入（eg.[b]c[b]d[b] 全排列）
c d 全排列
c (d)
c 放入（eg.[c]d[c] 全排列）
递归至只剩1个元素时，返回单个该元素组成的list的全排列（也就是单个该元素的二维list[[a]]）
即对于一个元素的全排列只有这一种可能
分治完成后再向前归并，将 前一步的单个元素分别放在该全排列的任意位置（InsertList函数作用）直至归并到最初调用完成
递归求解全排列
（5）很难一次性完全写对，不断调试不断修改